{"name": "test_1", "status": "broken", "statusDetails": {"message": "TypeError: missing 1 required keyword-only argument: 'options' (instance of driver `options.Options` class)", "trace": "request = <SubRequest 'appium_driver' for <Function test_1>>\n\n    @pytest.fixture(scope=\"function\")\n    def appium_driver(request):\n        desired_caps = {}\n        desired_caps['platformName'] = 'Android'\n        desired_caps['deviceName'] = 'Android'\n        desired_caps['appPackage'] = 'com.goibibo'\n        desired_caps['appActivity'] = '.common.HomeActivity'\n        desired_caps['noReset'] = True\n>       driver = webdriver.Remote('http://localhost:4723/wd/hub', desired_caps)\n\nconftest.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\venv\\Lib\\site-packages\\appium\\webdriver\\webdriver.py:238: in __init__\n    super().__init__(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <[AttributeError(\"'WebDriver' object has no attribute 'session_id'\") raised in repr()] WebDriver object at 0x20fa484ac60>\ncommand_executor = <appium.webdriver.appium_connection.AppiumConnection object at 0x0000020FA1B2C110>, keep_alive = True, file_detector = None, options = None\nlocator_converter = <appium.webdriver.locator_converter.AppiumLocatorConverter object at 0x0000020FA48DC8F0>\nweb_element_cls = <class 'appium.webdriver.webelement.WebElement'>\nclient_config = <appium.webdriver.client_config.AppiumClientConfig object at 0x0000020FA48B2000>\n\n    def __init__(\n        self,\n        command_executor: Union[str, RemoteConnection] = \"http://127.0.0.1:4444\",\n        keep_alive: bool = True,\n        file_detector: Optional[FileDetector] = None,\n        options: Optional[Union[BaseOptions, List[BaseOptions]]] = None,\n        locator_converter: Optional[LocatorConverter] = None,\n        web_element_cls: Optional[type] = None,\n        client_config: Optional[ClientConfig] = None,\n    ) -> None:\n        \"\"\"Create a new driver that will issue commands using the wire\n        protocol.\n    \n        Parameters:\n        -----------\n        command_executor : str or remote_connection.RemoteConnection\n            - Either a string representing the URL of the remote server or a custom\n            remote_connection.RemoteConnection object. Defaults to 'http://127.0.0.1:4444/wd/hub'.\n        keep_alive : bool (Deprecated)\n            - Whether to configure remote_connection.RemoteConnection to use HTTP keep-alive. Defaults to True.\n        file_detector : object or None\n            - Pass a custom file detector object during instantiation. If None, the default LocalFileDetector() will be used.\n        options : options.Options\n            - Instance of a driver options.Options class.\n        locator_converter : object or None\n            - Custom locator converter to use. Defaults to None.\n        web_element_cls : class\n            - Custom class to use for web elements. Defaults to WebElement.\n        client_config : object or None\n            - Custom client configuration to use. Defaults to None.\n        \"\"\"\n    \n        if options is None:\n>           raise TypeError(\n                \"missing 1 required keyword-only argument: 'options' (instance of driver `options.Options` class)\"\nE               TypeError: missing 1 required keyword-only argument: 'options' (instance of driver `options.Options` class)\n\n..\\venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:230: TypeError"}, "start": 1749909173563, "stop": 1749909173563, "uuid": "23623600-5bce-480f-acb8-f18635c73957", "historyId": "9873ddaff268adbf1a2c3c82ee662ed2", "testCaseId": "9873ddaff268adbf1a2c3c82ee662ed2", "fullName": "test_HydridApp#test_1", "labels": [{"name": "suite", "value": "test_HydridApp"}, {"name": "host", "value": "LAPTOP-AVB2L64G"}, {"name": "thread", "value": "22216-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_HydridApp"}]}